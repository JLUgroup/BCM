!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module BCM ! in 
    interface  ! in :BCM
        subroutine bcm(nele,natom,tau,lat_matrix,ele_num,q) ! in :BCM:BCMfunc.f90
            integer(kind=4), optional,check(len(ele_num)>=nele),depend(ele_num),intent(in) :: nele=len(ele_num)
            integer(kind=4), optional,check(shape(tau,1)==natom),depend(tau),intent(in) :: natom=shape(tau,1)
            real(kind=8) dimension(3,natom),intent(in) :: tau
            real(kind=8) dimension(3,3),intent(in) :: lat_matrix
            integer(kind=4) dimension(nele),intent(in) :: ele_num
            real(kind=8) dimension(11,nele,nele),depend(nele,nele),intent(out) :: q
        end subroutine bcm
        subroutine dist_bcm(distance,q1,q2,nele) ! in :BCM:BCMfunc.f90
            real(kind=8) :: distance
            real(kind=8) dimension(11,nele,nele) :: q1
            real(kind=8) dimension(11,nele,nele),depend(nele,nele) :: q2
            integer(kind=4), optional,check(shape(q1,1)==nele),depend(q1) :: nele=shape(q1,1)
        end subroutine dist_bcm
        subroutine car2sphe(x,y,z,r,theta,psi) ! in :BCM:car2sphe.f90
            real(kind=8) :: x
            real(kind=8) :: y
            real(kind=8) :: z
            real(kind=8) :: r
            real(kind=8) :: theta
            real(kind=8) :: psi
        end subroutine car2sphe
        subroutine spherical(l,m,angle1,angle2,y) ! in :BCM:spherical.f90
            integer(kind=4) :: l
            integer(kind=4) :: m
            real(kind=8) :: angle1
            real(kind=8) :: angle2
            complex :: y
        end subroutine spherical
    end interface 
end python module BCM

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
